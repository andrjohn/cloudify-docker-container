#!/bin/bash

. /lib/lsb/init-functions

sv start cfy-rest || exit 1
sv start cfy-ui || exit 1
sv start influxdb || exit 1

log_daemon_msg "Bootstraping Manager"

LOGS_DIR="/var/log/cloudify-bootstrap"
mkdir -p $LOGS_DIR

function wait_for_port
{
    c=0
    while ! echo exit | curl http://localhost:$1;
    do
            if [[ $c -gt 24 ]]; then
                    state_error "failed to connect to port $1 ..."
            fi
            echo "Port $1 not up yet... retrying... ($c/24)"
            sleep 2;
            c=$((c+1))
    done
}

# Make sure all the crap is in the Elasticsearch before starting 
echo "Preparing Elasticsearch indexes ..."
wait_for_port 9200

curl --retry 5 --retry-delay 1 -XPUT http://localhost:9200/cloudify_storage -d '{"settings": {"analysis": {"analyzer": {"default": {"tokenizer": "whitespace"}}}}}'
curl --retry 5 --retry-delay 1 -XPUT http://localhost:9200/cloudify_storage/blueprint/_mapping -d '{"blueprint": {"properties": {"plan": {"enabled": false}}}}'
curl --retry 5 --retry-delay 1 -XPUT http://localhost:9200/cloudify_storage/deployment/_mapping -d '{"deployment": {"properties": {"plan": {"enabled": false}, "workflows": {"enabled": false}}}}'
curl --retry 5 --retry-delay 1 -XPUT http://localhost:9200/cloudify_storage/node/_mapping -d '{ "node": { "_id": { "path": "id" }, "properties": { "types": { "type": "string", "index_name": "type" }, "properties": { "enabled": false } } } }'
curl --retry 5 --retry-delay 1 -XPUT http://localhost:9200/cloudify_storage/node_instance/_mapping -d '{ "node_instance": { "_id": { "path": "id" }, "properties": { "runtime_properties": { "enabled": false } } } }'

echo "Preparing InfluxDB ...."
wait_for_port 8086

curl "http://localhost:8086/db?u=root&p=root" -d "{\"name\": \"cloudify\"}"

# TODO: replace with the real KEY file that will be used for Agents connectivity
wait_for_port 8100
curl --retry 5 --retry-delay 1 -XPOST -H "Content-Type: application/json" http://localhost:8100/provider/context -d '{"name": "provider", "context":{"cloudify": {"cloudify_agent": {"agent_key_path": ""}, "min_workers":  2, "max_workers":  5, "remote_execution_port": 22, "user": "" } } }'

# Wait forever
sleep infinity

log_end_msg $?

exit 0